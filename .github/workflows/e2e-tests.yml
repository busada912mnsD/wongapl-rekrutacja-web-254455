name: E2E Tests

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    env:
      BASE_URL: "https://663d1d92.wongapl-rekrutacja-web-254455.pages.dev/"
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Debug BASE_URL
        run: |
          echo "Value of BASE_URL (from env block): $BASE_URL"

      - name: Run Playwright tests
        run: npx playwright test --workers=3

      - name: Upload Playwright test results (HTML Report)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5

      - name: Publish Playwright Report to Cloudflare Pages (e2e project)
        id: deploy_report
        if: github.event_name == 'pull_request'
        run: |
          npm install -g wrangler
          DEPLOY_OUTPUT=$(wrangler pages deploy playwright-report --project-name wongapl-rekrutacja-web-254455-e2e --branch ${{ github.head_ref }} --commit-hash ${{ github.sha }})
          REPORT_URL=$(echo "$DEPLOY_OUTPUT" | grep 'https://' | grep -v 'dash.cloudflare.com' | head -n 1)
          echo "deployment_url=$REPORT_URL" >> $GITHUB_OUTPUT

      - name: Get Playwright Test Summary
        id: get_summary
        if: github.event_name == 'pull_request'
        run: |
          if grep -q "failed" playwright-report/index.html; then
            echo "TEST_STATUS=FAILED" >> $GITHUB_OUTPUT
          else
            echo "TEST_STATUS=PASSED" >> $GITHUB_OUTPUT
          fi

      - name: Comment on Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const status = process.env.TEST_STATUS;
            const reportUrl = process.env.REPORT_DEPLOY_URL;

            let commentBody = `
            if (status === 'PASSED') {
              commentBody += `✅ All E2E tests passed! 🎉\n`;
            } else {
              commentBody += `❌ E2E tests failed. Please check the report for details. 🚨\n`;
            }
            commentBody += `\n**[View Full Playwright Report](${reportUrl})**\n\n`;
            commentBody += `_Last updated: ${new Date().toLocaleString()}_`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' && comment.body.includes('E2E Test Report')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: false
          user-agent: actions/github-script
          result-encoding: json
          retries: 0
          retry-exempt-status-codes: 400,401,403,404,422
        env:
          TEST_STATUS: ${{ steps.get_summary.outputs.TEST_STATUS }}
          REPORT_DEPLOY_URL: ${{ steps.deploy_report.outputs.deployment_url }}
